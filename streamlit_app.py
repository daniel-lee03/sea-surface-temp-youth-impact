# streamlit_app.py
# Ïã§Ìñâ: streamlit run --server.port 3000 --server.address 0.0.0.0 streamlit_app.py

import streamlit as st
import xarray as xr
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cartopy.feature as cfeature
import datetime
import numpy as np
import pandas as pd
from matplotlib.colors import TwoSlopeNorm
import matplotlib.patheffects as pe
import matplotlib.patches as patches
import textwrap

# --- Ìè∞Ìä∏ ÏÑ§Ï†ï ---
import matplotlib
from matplotlib import font_manager as fm, rcParams
from pathlib import Path

def setup_font():
    font_path = Path(__file__).parent / "fonts" / "Pretendard-Bold.ttf"
    if font_path.exists():
        fm.fontManager.addfont(str(font_path))
        font_name = fm.FontProperties(fname=str(font_path)).get_name()
        rcParams["font.family"] = font_name
    rcParams["axes.unicode_minus"] = False

setup_font()
rcParams["axes.spines.top"] = False
rcParams["axes.spines.right"] = False
rcParams["axes.grid"] = True
rcParams["grid.alpha"] = 0.25
PE = [pe.withStroke(linewidth=2.5, foreground="white")]

# --- NOAA OISST Îç∞Ïù¥ÌÑ∞ URL ---
# NOAA OISST v2 High Resolution Dataset: 
# ÎØ∏Íµ≠ Ìï¥ÏñëÎåÄÍ∏∞Ï≤≠(NOAA)ÏóêÏÑú Ï†úÍ≥µÌïòÎäî Í≥†Ìï¥ÏÉÅÎèÑ(0.25ÎèÑ Í≤©Ïûê) ÏùºÏùº Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ(SST) Îç∞Ïù¥ÌÑ∞ÏÖãÏûÖÎãàÎã§. 
# ÏúÑÏÑ±, ÏÑ†Î∞ï, Î∂ÄÌëú Îì± Îã§ÏñëÌïú Ï∂úÏ≤òÏùò Í¥ÄÏ∏° ÏûêÎ£åÎ•º Ï¢ÖÌï©ÌïòÏó¨ ÏÉùÏÑ±Îê©ÎãàÎã§.
BASE_URL = "https://psl.noaa.gov/thredds/dodsC/Datasets/noaa.oisst.v2.highres/sst.day.mean.{year}.nc"

@st.cache_data(show_spinner=False)
def load_sst(date: datetime.date):
    year = date.year
    url = BASE_URL.format(year=year)
    try:
        try:
            ds = xr.open_dataset(url)
        except Exception:
            ds = xr.open_dataset(url, engine="pydap")
        da = ds["sst"].sel(
            time=date.strftime("%Y-%m-%d"),
            lat=slice(28, 42), lon=slice(120, 135)
        ).squeeze()
        da.load()
        if np.all(np.isnan(da.values)):
            return None
        return da
    except Exception as e:
        st.error(f"Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®: {e}")
        return None

def plot_sst(da, date):
    fig, ax = plt.subplots(
        figsize=(9, 6),
        subplot_kw={"projection": ccrs.PlateCarree()}
    )
    ax.set_extent([120, 135, 28, 42], crs=ccrs.PlateCarree())
    norm = TwoSlopeNorm(vmin=20, vcenter=30, vmax=34)
    im = da.plot.pcolormesh(
        ax=ax, x="lon", y="lat",
        transform=ccrs.PlateCarree(),
        cmap="YlOrRd", norm=norm, add_colorbar=False
    )
    ax.coastlines()
    ax.add_feature(cfeature.LAND, facecolor="lightgray")
    cbar = fig.colorbar(im, ax=ax, orientation="vertical", pad=0.05)
    cbar.set_label("Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ (‚ÑÉ)")
    ax.set_title(f"Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ: {date.strftime('%Y-%m-%d')}")
    return fig
    ax.add_feature(cfeature.BORDERS, linewidth=0.5)

# --- Ïú†Ìã∏ Ìï®Ïàò (Bullet, Lollipop, Combo, Waffle) ---
def bullet(ax, value, target, label="", color="#F28E2B"):
    lo, hi = min(value, target), max(value, target)
    pad = (hi - lo) * 0.5 + 0.5
    vmin, vmax = lo - pad, hi + pad
    ax.barh([0], [vmax - vmin], left=vmin, color="#EEEEEE", height=0.36)
    ax.barh([0], [value - vmin], left=vmin, color=color, height=0.36)
    ax.axvline(target, color="#333333", lw=2.2)
    ax.set_yticks([]); ax.set_xlim(vmin, vmax); ax.set_xlabel("‚ÑÉ"); ax.set_title(label)
    delta = value - target
    badge = f"+{delta:.1f}‚ÑÉ" if delta >= 0 else f"{delta:.1f}‚ÑÉ"
    ax.text(value, 0.1, f"{value:.1f}‚ÑÉ", ha="left", va="bottom", weight="bold", path_effects=PE)
    ax.text(0.02, 0.9, badge, transform=ax.transAxes,
            fontsize=12, weight="bold", color="white", path_effects=PE,
            bbox=dict(boxstyle="round,pad=0.35", facecolor="#C1272D" if delta>=0 else "#2B7A78",
                      edgecolor="none"))

def lollipop_horizontal(ax, labels, values, title, unit="‚ÑÉ", color="#4C78A8", highlight_color="#E45756"):
    idx = np.argsort(values)[::-1]
    labels_sorted = [labels[i] for i in idx]
    values_sorted = [values[i] for i in idx]
    y = np.arange(len(labels_sorted))
    ax.hlines(y, [0]*len(values_sorted), values_sorted, color="#CCCCCC", lw=3)
    vmax_i = int(np.argmax(values_sorted))
    for i, v in enumerate(values_sorted):
        col = highlight_color if i == vmax_i else color
        ax.plot(v, y[i], "o", ms=10, mfc=col, mec=col)
        ax.text(v + max(values_sorted)*0.03, y[i], f"{v:.2f}{unit}" if unit.endswith("ÎÖÑ") else f"{v:.1f}{unit}",
                va="center", weight="bold" if i == vmax_i else 500, color=col, path_effects=PE)
    ax.set_yticks(y, labels_sorted); ax.set_xlabel(unit); ax.set_title(title); ax.grid(axis="x", alpha=0.25)

def combo_bar_line(ax, x_labels, bars, line, bar_color="#FDB863", line_color="#C1272D"):
    x = np.arange(len(x_labels))
    ax.bar(x, bars, color=bar_color, width=0.55)
    ax.set_xticks(x, x_labels); ax.set_ylabel("Ï¥ù ÌôòÏûê Ïàò(Î™Ö)")
    ax2 = ax.twinx()
    ax2.plot(x, line, marker="o", ms=7, lw=2.5, color=line_color)
    ax2.set_ylabel("Ï¥ù ÏÇ¨ÎßùÏûê Ïàò(Î™Ö)", color=line_color)

def waffle(ax, percent, rows=10, cols=10, on="#F03B20", off="#EEEEEE", title=None):
    total = rows*cols
    k = int(round(percent/100*total))
    for i in range(total):
        r = i // cols; c = i % cols
        color = on if i < k else off
        rect = patches.Rectangle((c, rows-1-r), 0.95, 0.95, facecolor=color, edgecolor="white")
        ax.add_patch(rect)
    ax.set_xlim(0, cols); ax.set_ylim(0, rows); ax.axis("off")
    if title: ax.set_title(title)
    ax.text(cols/2, rows/2, f"{percent:.0f}%", ha="center", va="center",
            fontsize=20, weight="bold", color="#333", path_effects=PE)

# --- Î≥¥Í≥†ÏÑú Î≥∏Î¨∏ ---
st.title("üåä Îú®Í±∞ÏõåÏßÄÎäî ÏßÄÍµ¨: Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ ÏÉÅÏäπÏù¥ Í≥†Îì±ÌïôÏÉùÏóêÍ≤å ÎØ∏ÏπòÎäî ÏòÅÌñ•")

st.header("I. ÏÑúÎ°†: Îú®Í±∞ÏõåÏßÄÎäî Î∞îÎã§, ÏúÑÌòëÎ∞õÎäî ÍµêÏã§")
st.markdown("""
ÌïúÎ∞òÎèÑÎäî ÏßÄÍµ¨ ÌèâÍ∑†Î≥¥Îã§ 2~3Î∞∞ Îπ†Î•∏ Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ ÏÉÅÏäπÏùÑ Í≤™Í≥† ÏûàÏúºÎ©∞, Ïù¥Îäî Îçî Ïù¥ÏÉÅ Ï∂îÏÉÅÏ†ÅÏù∏ ÌôòÍ≤Ω Î¨∏Ï†úÍ∞Ä ÏïÑÎãàÎùº 
ÎØ∏Îûò ÏÑ∏ÎåÄÏùò ÌïôÏäµÍ∂åÍ≥º Í±¥Í∞ïÏùÑ ÏßÅÏ†ëÏ†ÅÏúºÎ°ú ÏúÑÌòëÌïòÎäî ÌòÑÏã§ÏûÖÎãàÎã§. Î≥∏ Î≥¥Í≥†ÏÑúÎäî Í≥†Îì±ÌïôÏÉùÏùÑ Í∏∞ÌõÑ ÏúÑÍ∏∞Ïùò Í∞ÄÏû• Ï∑®ÏïΩÌïú ÏßëÎã®Ïù¥Ïûê 
Î≥ÄÌôîÏùò ÌïµÏã¨ ÎèôÎ†•ÏúºÎ°ú Ï°∞Î™ÖÌïòÎ©∞, Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ(Sea Surface Temperature, SST) ÏÉÅÏäπÏùò Ïã§ÌÉúÏôÄ ÌååÍ∏âÌö®Í≥ºÎ•º Îã§Í∞ÅÎèÑÎ°ú Î∂ÑÏÑùÌï©ÎãàÎã§.
""")

st.header("II. Ï°∞ÏÇ¨ Í≥ÑÌöç")
st.subheader("1) Ï°∞ÏÇ¨ Í∏∞Í∞Ñ")
st.markdown("2025ÎÖÑ 7Ïõî ~ 2025ÎÖÑ 8Ïõî")
st.subheader("2) Ï°∞ÏÇ¨ Î∞©Î≤ïÍ≥º ÎåÄÏÉÅ")
st.markdown("""
- **Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù**: NOAA OISST v2 High Resolution Dataset
  - *ÎØ∏Íµ≠ Ìï¥ÏñëÎåÄÍ∏∞Ï≤≠(NOAA)ÏóêÏÑú Ï†úÍ≥µÌïòÎäî Í≥†Ìï¥ÏÉÅÎèÑ(0.25ÎèÑ Í≤©Ïûê) ÏùºÏùº Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ Îç∞Ïù¥ÌÑ∞Î°ú, ÏúÑÏÑ±, ÏÑ†Î∞ï, Î∂ÄÌëú Îì± Îã§ÏñëÌïú Í¥ÄÏ∏° ÏûêÎ£åÎ•º Ï¢ÖÌï©ÌïòÏó¨ ÏÉùÏÑ±Îê©ÎãàÎã§.*
- **Î¨∏Ìóå Ï°∞ÏÇ¨**: Í∏∞ÏÉÅÏ≤≠, Ïó∞Íµ¨ ÎÖºÎ¨∏, Î≥¥ÎèÑÏûêÎ£å Îì± 
- **ÎåÄÏÉÅ**: ÎåÄÌïúÎØºÍµ≠ Í≥†Îì±ÌïôÏÉùÏùò Í±¥Í∞ï¬∑ÌïôÏóÖ¬∑ÏÇ¨ÌöåÍ≤ΩÏ†úÏ†Å ÏòÅÌñ•
""")

st.header("III. Ï°∞ÏÇ¨ Í≤∞Í≥º")

# NOAA ÏßÄÎèÑ
st.subheader("1) ÌïúÎ∞òÎèÑ Ï£ºÎ≥Ä Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ ÏÉÅÏäπ Ïã§ÌÉú")
date = st.date_input("ÎÇ†Ïßú ÏÑ†ÌÉù", value=datetime.date.today()-datetime.timedelta(days=2))
with st.spinner("Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Îäî Ï§ë..."):
    da = load_sst(date)
if da is not None:
    st.pyplot(plot_sst(da, date), clear_figure=True)

# Bullet Charts
st.subheader("üìà ÏµúÍ∑º Í∏∞Î°ùÍ≥º ÌèâÎÖÑ ÎåÄÎπÑ Ìé∏Ï∞®")
c1, c2, c3 = st.columns(3)
with c1:
    fig, ax = plt.subplots(figsize=(5,2.6))
    bullet(ax, 23.2, 21.2, label="2024-10 vs ÏµúÍ∑º10ÎÖÑ")
    st.pyplot(fig, clear_figure=True)
    st.caption("‚û°Ô∏è 2024ÎÖÑ 10Ïõî Ìï¥ÏàòÎ©¥ Ïò®ÎèÑÎäî ÏµúÍ∑º 10ÎÖÑ ÌèâÍ∑†Î≥¥Îã§ 2.0‚ÑÉ ÎÜíÏùå.")
with c2:
    fig, ax = plt.subplots(figsize=(5,2.6))
    bullet(ax, 19.8, 19.2, label="2023 Ïó∞ÌèâÍ∑† vs 2001‚Äì2020", color="#2E86AB")
    st.pyplot(fig, clear_figure=True)
    st.caption("‚û°Ô∏è Ïó∞ÌèâÍ∑† Í∏∞Ï§ÄÏúºÎ°úÎèÑ Ïû•Í∏∞ ÌèâÍ∑† ÎåÄÎπÑ +0.6‚ÑÉ ÏÉÅÏäπ.")
with c3:
    fig, ax = plt.subplots(figsize=(5,2.6))
    bullet(ax, 22.6, 22.6-2.8, label="ÏÑúÌï¥ 2024-10 vs ÏµúÍ∑º10ÎÖÑ", color="#E67E22")
    st.pyplot(fig, clear_figure=True)
    st.caption("‚û°Ô∏è ÏÑúÌï¥Îäî ÌèâÎÖÑ ÎåÄÎπÑ +2.8‚ÑÉ ÏÉÅÏäπ, Îã®Í∏∞Í∞Ñ Í∏âÍ≤©Ìûà Îú®Í±∞ÏõåÏßê.")

# Lollipop Charts
st.subheader("üìä Ìï¥Ïó≠Î≥Ñ Ïû•¬∑Îã®Í∏∞ ÏÉÅÏäπÍ≥º Ìé∏Ï∞®")
regions = ["ÎèôÌï¥", "ÏÑúÌï¥", "ÎÇ®Ìï¥"]
rise_1968_2008 = [1.39, 1.23, 1.27]
rate_since_2010 = [0.36, 0.54, 0.38]
anom_2024 = [3.4, 2.8, 1.1]
cL1, cL2, cL3 = st.columns(3)
with cL1:
    fig, ax = plt.subplots(figsize=(4.8,3))
    lollipop_horizontal(ax, regions, rise_1968_2008, title="Ïû•Í∏∞ ÏÉÅÏäπÌè≠ (1968‚Äì2008)", unit="‚ÑÉ")
    st.pyplot(fig, clear_figure=True)
    st.caption("‚û°Ô∏è ÎèôÌï¥Í∞Ä +1.39‚ÑÉÎ°ú Ïû•Í∏∞ ÏÉÅÏäπÌè≠ ÏµúÎåÄ.")
with cL2:
    fig, ax = plt.subplots(figsize=(4.8,3))
    lollipop_horizontal(ax, regions, rate_since_2010, title="Ïó∞ÌèâÍ∑† ÏÉÅÏäπÎ•† (2010~)", unit="‚ÑÉ/ÎÖÑ", color="#59A14F")
    st.pyplot(fig, clear_figure=True)
    st.caption("‚û°Ô∏è ÏµúÍ∑º 10Ïó¨ÎÖÑÍ∞ÑÏùÄ ÏÑúÌï¥Í∞Ä +0.54‚ÑÉ/ÎÖÑÏúºÎ°ú Í∞ÄÏû• Îπ†Î•¥Í≤å ÏÉÅÏäπ.")
with cL3:
    fig, ax = plt.subplots(figsize=(4.8,3))
    lollipop_horizontal(ax, regions, anom_2024, title="2024 Ìé∏Ï∞®", unit="‚ÑÉ", color="#F28E2B")
    st.pyplot(fig, clear_figure=True)
    st.caption("‚û°Ô∏è 2024ÎÖÑ ÎèôÌï¥Îäî ÌèâÎÖÑ ÎåÄÎπÑ +3.4‚ÑÉ ÏπòÏÜüÏùå.")

st.subheader("2) ÏßÄÍµ¨Ïóê ÎØ∏ÏπòÎäî ÏòÅÌñ•: Í∑πÎã®Ï†Å Í∏∞ÏÉÅ ÌòÑÏÉÅÏùò Ïã¨Ìôî")
st.markdown("""
Ìï¥ÏàòÎ©¥ Ïò®ÎèÑ ÏÉÅÏäπÏùÄ Îã®ÏàúÌûà Î∞îÎã§Îßå Îú®Í±∞ÏõåÏßÄÎäî ÌòÑÏÉÅÏóê Í∑∏ÏπòÏßÄ ÏïäÍ≥†, ÎåÄÍ∏∞ÏôÄ ÏÉÅÌò∏ÏûëÏö©ÌïòÎ©∞ ÏßÄÍµ¨ Ï†ÑÏ≤¥Ïùò Í∏∞ÏÉÅ ÏãúÏä§ÌÖúÏùÑ ÍµêÎûÄÌï©ÎãàÎã§.
- **Îçî Í∞ïÎ†•Ìïú ÌÉúÌíç**: Îî∞ÎúªÌïú Î∞îÎã§Îäî ÌÉúÌíçÏóê Îçî ÎßéÏùÄ ÏóêÎÑàÏßÄ(Ïû†Ïó¥)Î•º Í≥µÍ∏âÌïòÏó¨, Í≥ºÍ±∞Î≥¥Îã§ Ìõ®Ïî¨ Í∞ïÎ†•Ìïú 'ÏäàÌçº ÌÉúÌíç'ÏúºÎ°ú Î∞úÎã¨Ìï† Í∞ÄÎä•ÏÑ±ÏùÑ ÎÜíÏûÖÎãàÎã§.
- **ÏßëÏ§ëÌò∏Ïö∞ ÎπàÎ∞ú**: Í∏∞Ïò®Ïù¥ 1‚ÑÉ Ïò§Î•¥Î©¥ ÎåÄÍ∏∞Í∞Ä Î®∏Í∏àÏùÑ Ïàò ÏûàÎäî ÏàòÏ¶ùÍ∏∞ÎüâÏùÄ ÏïΩ 7% Ï¶ùÍ∞ÄÌï©ÎãàÎã§. Ïù¥Îäî ÏòàÏ∏° Î∂àÍ∞ÄÎä•Ìïú 'Î¨ºÌè≠ÌÉÑ' ÌòïÌÉúÏùò Íµ≠ÏßÄÏÑ± Ìè≠Ïö∞Î°ú Ïù¥Ïñ¥Ï†∏ ÌôçÏàò ÏúÑÌóòÏùÑ ÌÇ§ÏõÅÎãàÎã§.
- **ÌòπÎèÖÌïú Ìè≠Ïóº**: Î∞îÎã§Í∞Ä Îç∞ÏõåÏßÄÎ©¥ ÎåÄÍ∏∞ Ïó≠Ïãú Îú®Í±∞ÏõåÏ†∏ 'Ïó¥Îèî(Heat Dome)' ÌòÑÏÉÅÏù¥ Î∞úÏÉùÌïòÍ∏∞ ÏâΩÏäµÎãàÎã§. Ïù¥Îäî Ìïú ÏßÄÏó≠Ïóê Ìè≠ÏóºÏù¥ Ïû•Í∏∞Í∞Ñ ÏßÄÏÜçÎêòÎäî Í≤∞Í≥ºÎ°ú ÎÇòÌÉÄÎÇ©ÎãàÎã§.
""")
# Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ
temps2 = np.arange(0, 6)  # 0~5‚ÑÉ
humidity_increase = 7 * temps2  # 1‚ÑÉÎãπ 7% Ï¶ùÍ∞Ä (ÏÑ†ÌòïËøë‰ºº)

figH2, axH2 = plt.subplots(figsize=(7,4))

# Í≥°ÏÑ† ÎùºÏù∏
axH2.plot(temps2, humidity_increase, color="#2E86AB", lw=3, marker="o")

# Í≥°ÏÑ† ÏïÑÎûò Ï±ÑÏö∞Í∏∞ (gradient-like Ìö®Í≥º)
axH2.fill_between(temps2, humidity_increase, color="#2E86AB", alpha=0.2)

# Ï∂ï ÏÑ§Ï†ï
axH2.set_xlabel("Í∏∞Ïò® ÏÉÅÏäπ (‚ÑÉ)")
axH2.set_ylabel("ÎåÄÍ∏∞ ÏàòÏ¶ùÍ∏∞Îüâ Ï¶ùÍ∞ÄÏú® (%)")
axH2.set_title("Í∏∞Ïò® ÏÉÅÏäπÏóê Îî∞Î•∏ ÎåÄÍ∏∞ ÏàòÏ¶ùÍ∏∞Îüâ Ï¶ùÍ∞Ä")

# Ï£ºÏöî Ìè¨Ïù∏Ìä∏ Í∞ïÏ°∞
highlight_points = {1: 7, 2: 14, 3: 21, 4: 28, 5: 35}
for t, v in highlight_points.items():
    axH2.scatter(t, v, color="red", zorder=5)
    axH2.annotate(f"+{v:.0f}%", (t, v),
                  textcoords="offset points", xytext=(0,10),
                  ha="center", color="red", weight="bold")

st.pyplot(figH2, clear_figure=True)

st.caption("‚û°Ô∏è Í∏∞Ïò®Ïù¥ 1‚ÑÉ Ïò§Î•º ÎïåÎßàÎã§ ÏïΩ 7%Ïî© ÎåÄÍ∏∞ ÏàòÏ¶ùÍ∏∞ÎüâÏù¥ ÎäòÏñ¥ÎÇò ÏßëÏ§ëÌò∏Ïö∞ Í∞ÄÎä•ÏÑ±Ïù¥ Ïª§ÏßëÎãàÎã§.")

st.subheader("3) Í≥†Îì±ÌïôÏÉùÏóêÍ≤å ÎØ∏ÏπòÎäî ÏòÅÌñ•")
st.markdown("Ïù¥Îü¨Ìïú ÏßÄÍµ¨ ÌôòÍ≤ΩÏùò Î≥ÄÌôîÎäî Í≥†Îì±ÌïôÏÉùÎì§Ïùò ÌïôÏäµ ÌôòÍ≤ΩÍ≥º Ïã†Ï≤¥Ï†Å, Ï†ïÏã†Ï†Å Í±¥Í∞ïÏóê ÏßÅÏ†ëÏ†ÅÏù∏ ÏòÅÌñ•ÏùÑ ÎØ∏Ïπ©ÎãàÎã§.")

st.markdown("##### ÌïôÏóÖ ÏÑ±Ï∑®ÎèÑ Ï†ÄÌïò")
st.markdown("""
- **Ìè≠ÏóºÍ≥º ÌïôÏäµ Ìö®Ïú®**: Ìè≠ÏóºÏùÄ ÍµêÏã§Ïùò Ïò®ÎèÑÎ•º ÎÜíÏó¨ ÌïôÏÉùÎì§Ïùò ÏßëÏ§ëÎ†•ÏùÑ Ïã¨Í∞ÅÌïòÍ≤å Ï†ÄÌïòÏãúÌÇµÎãàÎã§.<br>
  **Ï†ÑÎØ∏Í≤ΩÏ†úÏó∞Íµ¨ÏÜå(NBER)Ïùò 'Heat and Learning' Ïó∞Íµ¨**Ïóê Îî∞Î•¥Î©¥, ÍµêÎÇ¥ ÎÉâÎ∞© ÏãúÏÑ§Ïù¥ ÏóÜÎäî ÌôòÍ≤ΩÏóêÏÑú  
  **Í∏∞Ïò®Ïù¥ ÏÑ≠Ïî® 1¬∞C ÏÉÅÏäπÌï† ÎïåÎßàÎã§ ÌïôÏÉùÎì§Ïùò ÌïôÏóÖ ÏÑ±Ï∑®ÎèÑÎäî ÏïΩ 1.8%Ïî© Í∞êÏÜå**ÌñàÏäµÎãàÎã§.
- **ÌïôÏäµ Í≤∞ÏÜê Î∞è ÍµêÏú° Î∂àÌèâÎì±**: Í∞ïÎ†•Ìï¥ÏßÑ ÌÉúÌíçÍ≥º ÏßëÏ§ëÌò∏Ïö∞Î°ú Ïù∏Ìïú Ïû¶ÏùÄ Ìú¥ÍµêÎäî ÌïôÏäµ Í≤∞ÏÜêÏúºÎ°ú Ïù¥Ïñ¥ÏßëÎãàÎã§.<br>
  ÎòêÌïú, ÎÉâÎ∞© ÏãúÏÑ§Ïù¥ Ïûò Í∞ñÏ∂∞ÏßÑ ÌïôÍµêÏôÄ Í∑∏Î†áÏßÄ ÏïäÏùÄ ÌïôÍµê Í∞ÑÏùò ÌïôÏäµ ÌôòÍ≤Ω Ï∞®Ïù¥Îäî  
  <strong>Í∏∞ÌõÑ ÏÑ±Ï∑® Í≤©Ï∞®(Climate Achievement Gap)</strong>Î•º Ïú†Î∞úÌïòÏó¨ ÍµêÏú° Î∂àÌèâÎì±ÏùÑ Ïã¨ÌôîÏãúÌÇ¨ Ïàò ÏûàÏäµÎãàÎã§.
""", unsafe_allow_html=True)


# --- üìâ Í∏∞Ïò® ÏÉÅÏäπ ‚Üí ÌïôÏóÖ ÏÑ±Ï∑®ÎèÑ Í∞êÏÜå (ÏãúÍ∞ÅÌôî) ---
temps = np.arange(0, 6)  # 0~5‚ÑÉ
impact = 100 - (1.8 * temps)  # 100% Í∏∞Ï§Ä ‚Üí ¬∞CÎãπ Í∞êÏÜå Î∞òÏòÅ

figC, axC = plt.subplots(figsize=(7,4))

# ÎßâÎåÄ Í∑∏ÎûòÌîÑ
axC.bar(temps, impact, color="#FDB863", alpha=0.7, label="Íµ¨Í∞ÑÎ≥Ñ ÌïôÏóÖ ÏÑ±Ï∑®ÎèÑ")

# ÏÑ† Í∑∏ÎûòÌîÑ (Ï∂îÏÑ∏ÏÑ†)
axC.plot(temps, impact, marker="o", color="#C1272D", lw=2.5, label="Ï∂îÏÑ∏ÏÑ† (1‚ÑÉ Îãπ -1.8%)")

# Ï∂ï/Ï†úÎ™©
axC.set_xlabel("Í∏∞Ïò® ÏÉÅÏäπ (‚ÑÉ)")
axC.set_ylabel("ÌïôÏóÖ ÏÑ±Ï∑®ÎèÑ (%)")
axC.set_title("Í∏∞Ïò® ÏÉÅÏäπÏù¥ ÌïôÏóÖ ÏÑ±Ï∑®ÎèÑÏóê ÎØ∏ÏπòÎäî ÏòÅÌñ•")
axC.set_ylim(80, 102)

# Îç∞Ïù¥ÌÑ∞ ÎùºÎ≤®
for t, v in zip(temps, impact):
    axC.text(t, v+0.5, f"{v:.1f}%", ha="center", va="bottom", fontsize=9)

axC.legend()
st.pyplot(figC, clear_figure=True)

st.caption("‚û°Ô∏è Í∏∞Ïò®Ïù¥ 1‚ÑÉ Ïò§Î•º ÎïåÎßàÎã§ ÌïôÏÉùÎì§Ïùò ÌïôÏóÖ ÏÑ±Ï∑®ÎèÑÎäî ÏïΩ 1.8%Ïî© Í∞êÏÜåÌï©ÎãàÎã§.")


st.markdown("##### Ïã†Ï≤¥ Î∞è Ï†ïÏã† Í±¥Í∞ï ÏúÑÌòë")
# Ïò®Ïó¥ÏßàÌôò Ï∞®Ìä∏
years = ["2022ÎÖÑ", "2023ÎÖÑ", "2024ÎÖÑ"]
patients = [1564, 2818, 3704]
deaths = [9, 32, 34]
figM, axM = plt.subplots(figsize=(8, 3.6))
combo_bar_line(axM, years, patients, deaths)
axM.set_title("Ïò®Ïó¥ÏßàÌôò ÌôòÏûê¬∑ÏÇ¨Îßù Ï∂îÏù¥")
st.pyplot(figM, clear_figure=True)
st.caption("‚û°Ô∏è Ìè≠ÏóºÏùò ÏùºÏÉÅÌôîÎ°ú Ïò®Ïó¥ÏßàÌôòÏûêÍ∞Ä Í∏âÏ¶ùÌïòÍ≥† ÏûàÏäµÎãàÎã§.")

# Í∏∞ÌõÑÏö∞Ïö∏ Ï∞®Ìä∏
cwa, cwb = st.columns(2)
with cwa:
    figW1, axW1 = plt.subplots(figsize=(4.2, 4.2))
    waffle(axW1, 59, title="Í∏∞ÌõÑÎ≥ÄÌôîÎ•º Îß§Ïö∞/Í∑πÎèÑÎ°ú Ïö∞Î†§")
    st.pyplot(figW1, clear_figure=True)
with cwb:
    figW2, axW2 = plt.subplots(figsize=(4.2, 4.2))
    waffle(axW2, 45, title="ÏùºÏÉÅÏóê Î∂ÄÏ†ïÏ†Å ÏòÅÌñ•ÏùÑ Î∞õÏùå")
    st.pyplot(figW2, clear_figure=True)

st.markdown("""
- **Ïã†Ï≤¥ Í±¥Í∞ï**: Ìè≠ÏóºÏúºÎ°ú Ïù∏Ìïú Ïò®Ïó¥ÏßàÌôòÏùò ÏúÑÌóòÏù¥ Ïª§ÏßÄÍ≥†, ÎåÄÍ∏∞Ïò§Ïóº Î¨ºÏßàÏù¥ Ï†ïÏ≤¥ÎêòÎ©¥ÏÑú Ï≤úÏãùÏù¥ÎÇò ÏïåÎ†àÎ•¥Í∏∞ Í∞ôÏùÄ Ìò∏Ìù°Í∏∞ ÏßàÌôòÏù¥ ÏïÖÌôîÎê† Ïàò ÏûàÏäµÎãàÎã§.
- **Ï†ïÏã† Í±¥Í∞ï**: Í∏∞ÌõÑ ÏúÑÍ∏∞Ïùò Ïã¨Í∞ÅÏÑ±ÏùÑ Ïù∏ÏßÄÌïòÎäî Ï≤≠ÏÜåÎÖÑÎì§ÏùÄ ÎØ∏ÎûòÏóê ÎåÄÌïú Î∂àÏïàÍ∞ê, Î¨¥Î†•Í∞ê, Î∂ÑÎÖ∏ Îì±ÏùÑ ÎäêÎÅºÎ©∞ 'Í∏∞ÌõÑ Ïö∞Ïö∏(Climate Anxiety)'ÏùÑ Í≤™ÏäµÎãàÎã§. **ÏùòÌïô Ï†ÄÎÑê 'ÎûúÏãØ'Ïùò Ïó∞Íµ¨**Ïóê Îî∞Î•¥Î©¥, Ï†Ñ ÏÑ∏Í≥Ñ **16-25ÏÑ∏ Ï≤≠ÏÜåÎÖÑÏùò 45%Í∞Ä Í∏∞ÌõÑ Î≥ÄÌôîÏóê ÎåÄÌïú Í±±Ï†ïÏúºÎ°ú ÏùºÏÉÅÏÉùÌôú(ÌïôÏóÖ, ÏàòÎ©¥, Ïó¨Í∞Ä Îì±)Ïóê Î∂ÄÏ†ïÏ†ÅÏù∏ ÏòÅÌñ•ÏùÑ Î∞õÎäîÎã§**Í≥† ÎãµÌñàÏúºÎ©∞, **59%Îäî Í∏∞ÌõÑ Î≥ÄÌôîÎ•º 'Îß§Ïö∞ ÎòêÎäî Í∑πÎèÑÎ°ú' Ïö∞Î†§**ÌïòÎäî Í≤ÉÏúºÎ°ú ÎÇòÌÉÄÎÇ¨ÏäµÎãàÎã§.
""")

st.subheader("4) ÎåÄÏùëÍ≥º ÎØ∏Îûò ÏÑ∏ÎåÄÎ•º ÏúÑÌïú Ï†úÏñ∏")
st.markdown("""
- **Ï†ïÏ±Ö**: Î™®Îì† ÌïôÍµêÏóê ÎÉâÎ∞© Î∞è ÌôòÍ∏∞ ÏãúÏä§ÌÖúÏùÑ ÌòÑÎåÄÌôîÌïòÍ≥†, Í∏∞ÌõÑ Î≥ÄÌôîÏóê Îî∞Î•∏ Ï≤≠ÏÜåÎÖÑ Í±¥Í∞ï ÏòÅÌñ•ÏùÑ Ï∂îÏ†ÅÌïòÎäî ÏÑ∏Î∂ÑÌôîÎêú ÌÜµÍ≥ÑÎ•º Íµ¨Ï∂ïÌï¥Ïïº Ìï©ÎãàÎã§.
- **ÍµêÏú°**: Í∏∞ÌõÑÎ≥ÄÌôîÎ•º Ï†ïÍ∑ú ÍµêÍ≥ºÎ™©ÏúºÎ°ú Ìé∏ÏÑ±ÌïòÍ≥†, Î¨∏Ï†ú Ìï¥Í≤∞ Ï§ëÏã¨Ïùò ÌîÑÎ°úÏ†ùÌä∏ Í∏∞Î∞ò ÌïôÏäµÏùÑ ÌôïÎåÄÌï¥Ïïº Ìï©ÎãàÎã§. ÎòêÌïú, 'Í∏∞ÌõÑÌÖåÌÅ¨'ÏôÄ Í∞ôÏùÄ ÏÉàÎ°úÏö¥ ÏßÑÎ°ú Î∂ÑÏïºÏóê ÎåÄÌïú ÏßÄÎèÑÍ∞Ä ÌïÑÏöîÌï©ÎãàÎã§.
- **Ï≤≠ÏÜåÎÖÑ ÌñâÎèô**: ÌîåÎùºÏä§Ìã± Ï†ÄÍ∞ê Ï∫†ÌéòÏù∏, Í∏∞ÌõÑÌñâÎèô ÏÜåÏÜ° Ï∞∏Ïó¨, ÏßÄÏó≠ÏÇ¨Ìöå ÌôòÍ≤Ω Î¨∏Ï†ú Ìï¥Í≤∞ Îì± Ï≤≠ÏÜåÎÖÑÏù¥ Ï£ºÎèÑÌïòÎäî Í∏∞ÌõÑ ÌñâÎèôÏùÑ Ï†ÅÍ∑πÏ†ÅÏúºÎ°ú ÏßÄÏõêÌïòÍ≥† ÌôïÏÇ∞Ìï¥Ïïº Ìï©ÎãàÎã§.
""")

# --- Í≤∞Î°† Î∞è Ï∞∏Í≥† ÏûêÎ£å ---
st.header("IV. Í≤∞Î°†")
st.markdown("""
ÎåÄÌïúÎØºÍµ≠ Ï£ºÎ≥Ä Ìï¥ÏàòÎ©¥ Ïò®ÎèÑÏùò ÏÉÅÏäπÏùÄ Îã®ÏàúÌïú Ìï¥Ïñë Î¨∏Ï†úÍ∞Ä ÏïÑÎãàÎùº,  
Í≥†Îì±ÌïôÏÉùÎì§Ïùò Í±¥Í∞ï¬∑ÌïôÏóÖ¬∑ÏÉùÌôú Ï†ÑÎ∞òÏùÑ ÏúÑÌòëÌïòÎäî **Î≥µÌï© ÏúÑÍ∏∞**ÏûÖÎãàÎã§.  
Í∑∏Îü¨ÎÇò ÍµêÏú°Í≥º Ï≤≠ÏÜåÎÖÑ Ï£ºÎèÑÏùò Í∏∞ÌõÑ ÌñâÎèôÏùÑ ÌÜµÌï¥ Ïù¥ ÏúÑÍ∏∞Î•º Í∏∞ÌöåÎ°ú Ï†ÑÌôòÌï† Ïàò ÏûàÏäµÎãàÎã§.  
""")

st.header("V. Ï∞∏Í≥† ÏûêÎ£å")
st.markdown("""
- Goodman, J., & Park, R. J. (2018). *Heat and Learning*. NBER Working Paper.
- Hickman, C., et al. (2021). Climate anxiety in children and young people and their beliefs about government responses to climate change: a global survey. *The Lancet Planetary Health*.
- Í∏∞ÏÉÅÏ≤≠ Î≥¥ÎèÑÏûêÎ£å (2024)  
- ÌïúÍµ≠Ìï¥ÏñëÏàòÏÇ∞Í∞úÎ∞úÏõê Ïó∞Íµ¨Î≥¥Í≥†ÏÑú  
- Planet03 Ìï¥ÏñëÏó¥Ìåå Ïó∞Íµ¨ (2021)  
- Newstree, YTN Science Ïô∏ Í∏∞ÏÇ¨ Î∞è Ïó∞Íµ¨ÎÖºÎ¨∏  
""")

st.markdown(
    """
    <hr style='border:1px solid #ccc; margin-top:30px; margin-bottom:10px;'/>
    <div style='text-align: center; padding: 10px; color: gray; font-size: 0.9em;'>
        ÎØ∏Î¶ºÎßàÏù¥Ïä§ÌÑ∞Í≥†Îì±ÌïôÍµê 1ÌïôÎÖÑ 4Î∞ò 1Ï°∞ ¬∑ ÏßÄÏÜçÍ∞ÄÎä•ÌïúÏßÄÍµ¨ÏÇ¨ÎûëÌï¥Ï°∞
    </div>
    """,
    unsafe_allow_html=True
)